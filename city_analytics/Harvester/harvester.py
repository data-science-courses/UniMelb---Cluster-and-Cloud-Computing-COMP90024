# -*- coding: utf-8 -*-
"""Harvester.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1GH5PNjxrhdHCjo4uC2HdHMp7sGtF9bHF
"""

import tweepy
from __future__ import absolute_import, print_function
from tweepy import OAuthHandler, Stream, StreamListener
import json

# The consumer key and secret 
consumer_key="1IN6rVE2D5fXZ3uUSkaKj6sH7"

consumer_secret="wjHCDcwOlCnTNAoSsdrppK3bUz47BskNwq4GkpdU5qpMHmrqvo"

access_token="775994541954347008-jANS08q8Nx38WaVIgfJi7eL6u0yWC9h"

access_token_secret="B2SDzmUVMZvCEZrJgvBAXYbijXAveUmNAkJEs6GszRJ06"

auth = OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

# class StdOutListener(StreamListener):
#     """ A listener handles tweets that are received from the stream.
#     This is a basic listener that just prints received tweets to stdout.
#     """
#     def on_data(self, data):
#         print(data)
#         return True

#     def on_error(self, status):
#         print(status)

# if __name__ == '__main__':
#     l = StdOutListener()
#     auth = OAuthHandler(consumer_key, consumer_secret)
#     auth.set_access_token(access_token, access_token_secret)

#     stream = Stream(auth, l)
#     stream.filter(track=['covid'])

class MyStreamListener(tweepy.StreamListener):
    def __init__(self, api):
        self.api = api
        self.me = api.me()

    def on_status(self, tweet):
        print(f"{tweet.user.name}:{tweet.text}")

    def on_error(self, status):
        print("Error detected")

# Authenticate to Twitter
auth = tweepy.OAuthHandler(consumer_key, consumer_secret)
auth.set_access_token(access_token, access_token_secret)

# Create API object
api = tweepy.API(auth, wait_on_rate_limit=True,
    wait_on_rate_limit_notify=True)

tweets_listener = MyStreamListener(api)
stream = tweepy.Stream(api.auth, tweets_listener)
stream.filter(track=["Covid", "Coronavirus"], languages=["en"])

